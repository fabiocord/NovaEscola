// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovaEscola.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NovaEscola.Migrations
{
    [DbContext(typeof(NovaEscolaContext))]
    [Migration("20200628081102_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("NovaEscola.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("TRUE");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Cep")
                        .HasColumnType("integer")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Complemento")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<DateTime>("DataModificacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Descricao")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lougradouro")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("character varying(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TelFixo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelMovel")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("character varying(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Escolas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Bairro = "Tijuca",
                            Cep = 20540030,
                            Cidade = "Rio de Janeiro",
                            Complemento = "Apto 201 F",
                            DataFundacao = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 1, 999, DateTimeKind.Local).AddTicks(6484),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 0, DateTimeKind.Local).AddTicks(3811),
                            Descricao = "Escola Municipal ABC",
                            Email = "contato@escolaabc.com.br",
                            Lougradouro = "Rua Severino Brandão",
                            Name = "Escola ABC",
                            Numero = "41",
                            Pais = "Brasil",
                            TelFixo = "2125692407",
                            TelMovel = "21995132912",
                            Uf = "RJ"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            Bairro = "Tijuca",
                            Cep = 20540030,
                            Cidade = "Rio de Janeiro",
                            Complemento = "Apto 301",
                            DataFundacao = new DateTime(1981, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 1, DateTimeKind.Local).AddTicks(842),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 1, DateTimeKind.Local).AddTicks(848),
                            Descricao = "Escola Municipal DEF",
                            Email = "contato@escoladef.com.br",
                            Lougradouro = "Rua Barão de Mesquita",
                            Name = "Escola DEF",
                            Numero = "134",
                            Pais = "Brasil",
                            TelFixo = "2125692407",
                            TelMovel = "21995132912",
                            Uf = "RJ"
                        });
                });

            modelBuilder.Entity("NovaEscola.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Ensino")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ensino = 1,
                            Nome = "1º ano"
                        },
                        new
                        {
                            Id = 2,
                            Ensino = 1,
                            Nome = "2º ano"
                        },
                        new
                        {
                            Id = 3,
                            Ensino = 1,
                            Nome = "3º ano"
                        },
                        new
                        {
                            Id = 4,
                            Ensino = 1,
                            Nome = "4º ano"
                        },
                        new
                        {
                            Id = 5,
                            Ensino = 1,
                            Nome = "5º ano"
                        },
                        new
                        {
                            Id = 6,
                            Ensino = 1,
                            Nome = "6º ano"
                        },
                        new
                        {
                            Id = 7,
                            Ensino = 1,
                            Nome = "7º ano"
                        },
                        new
                        {
                            Id = 8,
                            Ensino = 1,
                            Nome = "8º ano"
                        },
                        new
                        {
                            Id = 9,
                            Ensino = 1,
                            Nome = "9º ano"
                        },
                        new
                        {
                            Id = 10,
                            Ensino = 2,
                            Nome = "1º ano"
                        },
                        new
                        {
                            Id = 11,
                            Ensino = 2,
                            Nome = "2º ano"
                        },
                        new
                        {
                            Id = 12,
                            Ensino = 2,
                            Nome = "3º ano"
                        });
                });

            modelBuilder.Entity("NovaEscola.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("TRUE");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<DateTime>("DataModificacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<string>("NomeTurma")
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeVagas")
                        .HasColumnType("integer");

                    b.Property<int>("SerieId")
                        .HasColumnType("integer");

                    b.Property<int>("Turno")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("SerieId");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 3, DateTimeKind.Local).AddTicks(9384),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 3, DateTimeKind.Local).AddTicks(9393),
                            Descricao = "Turma 101",
                            EscolaId = 1,
                            NomeTurma = "101",
                            QuantidadeVagas = 30,
                            SerieId = 1,
                            Turno = 1
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2544),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2550),
                            Descricao = "Turma 201",
                            EscolaId = 1,
                            NomeTurma = "201",
                            QuantidadeVagas = 30,
                            SerieId = 2,
                            Turno = 1
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2607),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2608),
                            Descricao = "Turma 301",
                            EscolaId = 1,
                            NomeTurma = "301",
                            QuantidadeVagas = 30,
                            SerieId = 3,
                            Turno = 1
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2610),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2611),
                            Descricao = "Turma 401",
                            EscolaId = 1,
                            NomeTurma = "401",
                            QuantidadeVagas = 30,
                            SerieId = 4,
                            Turno = 1
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2613),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2613),
                            Descricao = "Turma 501",
                            EscolaId = 1,
                            NomeTurma = "501",
                            QuantidadeVagas = 30,
                            SerieId = 5,
                            Turno = 1
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2615),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2616),
                            Descricao = "Turma 601",
                            EscolaId = 1,
                            NomeTurma = "601",
                            QuantidadeVagas = 30,
                            SerieId = 6,
                            Turno = 1
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2617),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2618),
                            Descricao = "Turma 701",
                            EscolaId = 1,
                            NomeTurma = "701",
                            QuantidadeVagas = 30,
                            SerieId = 7,
                            Turno = 1
                        },
                        new
                        {
                            Id = 8,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2620),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2620),
                            Descricao = "Turma 801",
                            EscolaId = 1,
                            NomeTurma = "801",
                            QuantidadeVagas = 30,
                            SerieId = 8,
                            Turno = 1
                        },
                        new
                        {
                            Id = 9,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2622),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2623),
                            Descricao = "Turma 901",
                            EscolaId = 1,
                            NomeTurma = "901",
                            QuantidadeVagas = 30,
                            SerieId = 9,
                            Turno = 1
                        },
                        new
                        {
                            Id = 10,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2624),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2625),
                            Descricao = "Turma 1001",
                            EscolaId = 1,
                            NomeTurma = "1001",
                            QuantidadeVagas = 35,
                            SerieId = 10,
                            Turno = 2
                        },
                        new
                        {
                            Id = 11,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2627),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2628),
                            Descricao = "Turma 1002",
                            EscolaId = 1,
                            NomeTurma = "1002",
                            QuantidadeVagas = 35,
                            SerieId = 10,
                            Turno = 2
                        },
                        new
                        {
                            Id = 12,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2629),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2630),
                            Descricao = "Turma 2001",
                            EscolaId = 1,
                            NomeTurma = "2001",
                            QuantidadeVagas = 35,
                            SerieId = 11,
                            Turno = 2
                        },
                        new
                        {
                            Id = 13,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2631),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2632),
                            Descricao = "Turma 2002",
                            EscolaId = 1,
                            NomeTurma = "2002",
                            QuantidadeVagas = 35,
                            SerieId = 11,
                            Turno = 2
                        },
                        new
                        {
                            Id = 14,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2634),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2635),
                            Descricao = "Turma 3001",
                            EscolaId = 1,
                            NomeTurma = "3001",
                            QuantidadeVagas = 35,
                            SerieId = 11,
                            Turno = 2
                        },
                        new
                        {
                            Id = 15,
                            Ativo = true,
                            DataInclusao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2636),
                            DataModificacao = new DateTime(2020, 6, 28, 5, 11, 2, 4, DateTimeKind.Local).AddTicks(2637),
                            Descricao = "Turma 3002",
                            EscolaId = 1,
                            NomeTurma = "3002",
                            QuantidadeVagas = 35,
                            SerieId = 11,
                            Turno = 2
                        });
                });

            modelBuilder.Entity("NovaEscola.Models.Turma", b =>
                {
                    b.HasOne("NovaEscola.Models.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovaEscola.Models.Serie", "Serie")
                        .WithMany()
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
